# Campus Study Buddy - Infrastructure Deployment
# Simple workflow: Plan on push, Apply on merge with manual approval

name: 'Infrastructure Deployment'

on:
  push:
    branches:
      - '**'        # Any branch push triggers plan
      - '!master'   # Except master (since it's protected)
    paths:
      - 'infra/terraform/**'
      - '.github/workflows/infrastructure.yml'
  workflow_dispatch:
    inputs:
      action:
        description: 'Destroy infrastructure'
        required: true
        default: 'destroy'
        type: choice
        options:
          - destroy

permissions:
  contents: read
  id-token: write

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref != 'refs/heads/master'
    environment: production
    
    # Set Terraform environment variables for Service Principal authentication
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_CLI: "false"
      TF_VAR_database_admin_password: ${{ secrets.TF_VAR_database_admin_password }}
    
    defaults:
      run:
        shell: bash
        working-directory: infra/terraform
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.5.0
    
    - name: Terraform Init
      run: terraform init -backend-config="environments/prod/-backend-config"
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
    
    - name: Terraform Validate
      run: terraform validate
    
    - name: Terraform Plan
      run: |
        terraform plan -var-file="environments/prod/terraform.tfvars"

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production
    
    # Set Terraform environment variables for Service Principal authentication
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_CLI: "false"
      TF_VAR_database_admin_password: ${{ secrets.TF_VAR_database_admin_password }}
    
    defaults:
      run:
        shell: bash
        working-directory: infra/terraform
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.5.0
    
    - name: Terraform Init
      run: terraform init -backend-config="environments/prod/-backend-config"
    
    - name: Show Plan (for approval)
      run: |
        echo "üîç Showing plan for manual approval..."
        terraform plan -var-file="environments/prod/terraform.tfvars"
    
    - name: Terraform Apply
      run: |
        echo "üöÄ Applying infrastructure changes..."
        terraform apply -var-file="environments/prod/terraform.tfvars" -auto-approve

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    environment: production
    
    # Set Terraform environment variables for Service Principal authentication
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_CLI: "false"
      TF_VAR_database_admin_password: ${{ secrets.TF_VAR_database_admin_password }}
    
    defaults:
      run:
        shell: bash
        working-directory: infra/terraform
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.5.0
    
    - name: Terraform Init
      run: terraform init -backend-config="environments/prod/-backend-config"
    
    - name: Show Destroy Plan (for approval)
      run: |
        echo "üîç Showing destroy plan for manual approval..."
        terraform plan -destroy -var-file="environments/prod/terraform.tfvars"
    
    - name: Terraform Destroy
      run: |
        echo "üí• Destroying infrastructure..."
        terraform destroy -var-file="environments/prod/terraform.tfvars" -auto-approve
